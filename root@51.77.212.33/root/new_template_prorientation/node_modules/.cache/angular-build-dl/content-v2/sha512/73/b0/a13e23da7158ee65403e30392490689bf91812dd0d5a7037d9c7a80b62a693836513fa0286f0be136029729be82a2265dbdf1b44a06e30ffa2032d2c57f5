{"version":3,"sources":["src/app/pages/register/register.page.html","src/app/pages/register/register-routing.module.ts","src/app/pages/register/register.module.ts","src/app/pages/register/register.page.scss","src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title color=\\\"secondary\\\">Inscription</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"tryRegister(validations_form.value)\\\">\\n\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" color=\\\"secondary\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" color=\\\"secondary\\\">Mot de passe</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" color=\\\"secondary\\\">Prenom</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"first_name\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.first_name\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('first_name').hasError(validation.type) && (validations_form.get('first_name').dirty || validations_form.get('first_name').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" color=\\\"secondary\\\">Nom</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"last_name\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.last_name\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('last_name').hasError(validation.type) && (validations_form.get('last_name').dirty || validations_form.get('last_name').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n\\n    <ion-button  color=\\\"secondary\\\" class=\\\"submit-btn\\\" type=\\\"submit\\\"  [disabled]=\\\"!validations_form.valid\\\">Inscription</ion-button>\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n  </form>\\n  <p class=\\\"go-to-login\\\">Vous avez déjà un compte? <a color=\\\"secondary\\\" (click)=\\\"goLoginPage()\\\">Essayez de vous connecter.</a></p>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  validation_messages = {\n   'email': [\n     { type: 'required', message: 'Email is required.' },\n     { type: 'pattern', message: 'Enter a valid email.' }\n   ],\n   'password': [\n     { type: 'required', message: 'Password is required.' },\n     { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n   ],\n   'first_name':[\n     { type: 'required', message: 'Name is required.' },\n     { type: 'minlength', message: 'Enter a valid name' }\n   ],\n   'last_name':[\n     { type: 'required', message: 'Name is required.' },\n     { type: 'minlength', message: 'Enter a valid name' }\n   ]\n };\n\n  constructor(\n    private navCtrl: NavController,\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(){\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n      first_name:new FormControl('', Validators.compose([\n        Validators.minLength(1),\n        Validators.required\n      ])),\n      last_name:new FormControl('', Validators.compose([\n        Validators.minLength(1),\n        Validators.required\n      ]))\n    });\n  }\n\n  tryRegister(value){\n    this.authService.registerUser(value)\n     .then(res => {\n       console.log(res);\n       this.errorMessage = \"\";\n       this.successMessage = \"Your account has been created. Please log in.\";\n\n     }, err => {\n       console.log(err);\n       this.errorMessage = err.message;\n       this.successMessage = \"\";\n     })\n  }\n\n  goLoginPage(){\n    this.navCtrl.navigateBack('login');\n  }\n\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-register-register-module-es5.js"}